name: App Store - Production Build - TestFlight

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: "Version Number (e.g. 1.2.3)"
        required: true
        default: "1.2.3"
      build_number:
        description: "Build Number"
        required: true
        default: "10"
      environment:
        description: "Deployment Environment"
        type: choice
        options:
          - production
          - staging
        required: true
        default: "production"

jobs:
  testFlight-build:
    name: iOS TestFlight Build
    runs-on: macos-13 # Specifically using macos-13 for better Xcode support
    timeout-minutes: 60 # Add timeout to prevent hanging builds

    strategy:
      matrix:
        node-version: [18.x]
      fail-fast: true # Stop all jobs if one fails

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper versioning

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.2"

      - name: Print Build Information
        run: |
          echo "Build Number: ${{ github.event.inputs.build_number }}"
          echo "Version Number: ${{ github.event.inputs.version_number }}"
          echo "Environment: ${{ github.event.inputs.environment }}"
          xcodebuild -version

      - name: Install Dependencies
        run: |
          npm ci
          pod install --repo-update --project-directory=ios

      - name: Setup Ruby and Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Install Fastlane
        run: |
          gem install bundler
          bundle install

      - name: Setup Git Config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup Keychain
        env:
          KEYCHAIN_NAME: ${{ github.run_id }}_keychain
          KEYCHAIN_PASSWORD: ${{ github.run_id }}_password
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security default-keychain -s "$KEYCHAIN_NAME"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security set-keychain-settings -t 3600 -l "$KEYCHAIN_NAME"

      - name: Setup Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.APPLE_API_KEY_FILE }}" > AppleApiKey.p8

      - name: Build and Upload to TestFlight
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: "ios testflight"
          subdirectory: "ios"
          bundle-install-path: "vendor/bundle"
        env:
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
          BUNDLE_ID: ${{ secrets.BUNDLE_ID }}
          APPLE_APP_ID: ${{ secrets.APPLE_APP_ID }}
          GIT_PERSONAL_ACCESS_TOKEN: ${{ secrets.GIT_PERSONAL_ACCESS_TOKEN }}
          BUILD_NUMBER: ${{ github.event.inputs.build_number }}
          VERSION_NUMBER: ${{ github.event.inputs.version_number }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          CI: true

      - name: Cleanup Keychain
        if: always()
        env:
          KEYCHAIN_NAME: ${{ github.run_id }}_keychain
        run: |
          security delete-keychain "$KEYCHAIN_NAME"

      - name: Cleanup Credentials
        if: always()
        run: |
          rm -f AppleApiKey.p8
          rm -rf ~/Library/MobileDevice/Provisioning\ Profiles/*
